package xxfin.oracle.apps.ap.iou.schema.server;

import oracle.apps.fnd.framework.server.OAEntityImpl;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class iouEOImpl extends OAEntityImpl
{
  public static final int IOUID = 0;
  public static final int IOUNUM = 1;
  public static final int PERSONID = 2;
  public static final int DIVISIONID = 3;
  public static final int IOUGIVENDATE = 4;
  public static final int CURRENCY = 5;
  public static final int AMOUNT = 6;
  public static final int EXCHANGERATE = 7;
  public static final int EXCHANGERATEDATE = 8;
  public static final int EXCHANGERATETYPE = 9;
  public static final int AMOUNTOMR = 10;
  public static final int REMARKS = 11;
  public static final int IOUCLOSEDDATE = 12;
  public static final int REASONFORCLOSING = 13;
  public static final int BILLAMOUNT = 14;
  public static final int BILLATTACHMENT = 15;
  public static final int DIFFAMOUNT = 16;
  public static final int DIFFAMOUNTSETTLED = 17;
  public static final int ATTACHMENT = 18;
  public static final int ATTRIBUTECATEGORY = 19;
  public static final int ATTRIBUTE1 = 20;
  public static final int ATTRIBUTE2 = 21;
  public static final int ATTRIBUTE3 = 22;
  public static final int ATTRIBUTE4 = 23;
  public static final int ATTRIBUTE5 = 24;
  public static final int ATTRIBUTE6 = 25;
  public static final int ATTRIBUTE7 = 26;
  public static final int ATTRIBUTE8 = 27;
  public static final int ATTRIBUTE9 = 28;
  public static final int ATTRIBUTE10 = 29;
  public static final int ATTRIBUTE11 = 30;
  public static final int ATTRIBUTE12 = 31;
  public static final int ATTRIBUTE13 = 32;
  public static final int ATTRIBUTE14 = 33;
  public static final int ATTRIBUTE15 = 34;
  public static final int ATTRIBUTE16 = 35;
  public static final int ATTRIBUTE17 = 36;
  public static final int ATTRIBUTE18 = 37;
  public static final int ATTRIBUTE19 = 38;
  public static final int ATTRIBUTE20 = 39;
  public static final int CREATIONDATE = 40;
  public static final int CREATEDBY = 41;
  public static final int LASTUPDATEDATE = 42;
  public static final int LASTUPDATEDBY = 43;
  public static final int LASTUPDATELOGIN = 44;
  public static final int STATUS = 45;
  public static final int DIVISION = 46;
  private static iouEODefImpl mDefinitionObject;

  /**This is the default constructor (do not remove)
   */
  public iouEOImpl()
  {
  }


  /**Retrieves the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject()
  {
    if (mDefinitionObject == null)
    {
      mDefinitionObject = (iouEODefImpl)EntityDefImpl.findDefObject("xxfin.oracle.apps.ap.iou.schema.server.iouEO");
    }
    return mDefinitionObject;
  }

  /**Add attribute defaulting logic in this method.
   */
  public void create(AttributeList attributeList)
  {
    super.create(attributeList);
  }

  /**Add entity remove logic in this method.
   */
  public void remove()
  {
    super.remove();
  }

  /**Add Entity validation code in this method.
   */
  protected void validateEntity()
  {
    super.validateEntity();
  }

  /**Add locking logic here.
   */
  public void lock()
  {
    super.lock();
  }

  /**Custom DML update/insert/delete logic here.
   */
  protected void doDML(int operation, TransactionEvent e)
  {
    super.doDML(operation, e);
  }

  /**Gets the attribute value for IouId, using the alias name IouId
   */
  public Number getIouId()
  {
    return (Number)getAttributeInternal(IOUID);
  }

  /**Sets <code>value</code> as the attribute value for IouId
   */
  public void setIouId(Number value)
  {
    setAttributeInternal(IOUID, value);
  }

  /**Gets the attribute value for IouNum, using the alias name IouNum
   */
  public String getIouNum()
  {
    return (String)getAttributeInternal(IOUNUM);
  }

  /**Sets <code>value</code> as the attribute value for IouNum
   */
  public void setIouNum(String value)
  {
    setAttributeInternal(IOUNUM, value);
  }

  /**Gets the attribute value for PersonId, using the alias name PersonId
   */
  public Number getPersonId()
  {
    return (Number)getAttributeInternal(PERSONID);
  }

  /**Sets <code>value</code> as the attribute value for PersonId
   */
  public void setPersonId(Number value)
  {
    setAttributeInternal(PERSONID, value);
  }

  /**Gets the attribute value for DivisionId, using the alias name DivisionId
   */
  public Number getDivisionId()
  {
    return (Number)getAttributeInternal(DIVISIONID);
  }

  /**Sets <code>value</code> as the attribute value for DivisionId
   */
  public void setDivisionId(Number value)
  {
    setAttributeInternal(DIVISIONID, value);
  }

  /**Gets the attribute value for IouGivenDate, using the alias name IouGivenDate
   */
  public Date getIouGivenDate()
  {
    return (Date)getAttributeInternal(IOUGIVENDATE);
  }

  /**Sets <code>value</code> as the attribute value for IouGivenDate
   */
  public void setIouGivenDate(Date value)
  {
    setAttributeInternal(IOUGIVENDATE, value);
  }

  /**Gets the attribute value for Currency, using the alias name Currency
   */
  public String getCurrency()
  {
    return (String)getAttributeInternal(CURRENCY);
  }

  /**Sets <code>value</code> as the attribute value for Currency
   */
  public void setCurrency(String value)
  {
    setAttributeInternal(CURRENCY, value);
  }

  /**Gets the attribute value for Amount, using the alias name Amount
   */
  public String getAmount()
  {
    return (String)getAttributeInternal(AMOUNT);
  }

  /**Sets <code>value</code> as the attribute value for Amount
   */
  public void setAmount(String value)
  {
    setAttributeInternal(AMOUNT, value);
  }

  /**Gets the attribute value for ExchangeRate, using the alias name ExchangeRate
   */
  public String getExchangeRate()
  {
    return (String)getAttributeInternal(EXCHANGERATE);
  }

  /**Sets <code>value</code> as the attribute value for ExchangeRate
   */
  public void setExchangeRate(String value)
  {
    setAttributeInternal(EXCHANGERATE, value);
  }

  /**Gets the attribute value for ExchangeRateDate, using the alias name ExchangeRateDate
   */
  public Date getExchangeRateDate()
  {
    return (Date)getAttributeInternal(EXCHANGERATEDATE);
  }

  /**Sets <code>value</code> as the attribute value for ExchangeRateDate
   */
  public void setExchangeRateDate(Date value)
  {
    setAttributeInternal(EXCHANGERATEDATE, value);
  }

  /**Gets the attribute value for ExchangeRateType, using the alias name ExchangeRateType
   */
  public String getExchangeRateType()
  {
    return (String)getAttributeInternal(EXCHANGERATETYPE);
  }

  /**Sets <code>value</code> as the attribute value for ExchangeRateType
   */
  public void setExchangeRateType(String value)
  {
    setAttributeInternal(EXCHANGERATETYPE, value);
  }

  /**Gets the attribute value for AmountOmr, using the alias name AmountOmr
   */
  public String getAmountOmr()
  {
    return (String)getAttributeInternal(AMOUNTOMR);
  }

  /**Sets <code>value</code> as the attribute value for AmountOmr
   */
  public void setAmountOmr(String value)
  {
    setAttributeInternal(AMOUNTOMR, value);
  }

  /**Gets the attribute value for Remarks, using the alias name Remarks
   */
  public String getRemarks()
  {
    return (String)getAttributeInternal(REMARKS);
  }

  /**Sets <code>value</code> as the attribute value for Remarks
   */
  public void setRemarks(String value)
  {
    setAttributeInternal(REMARKS, value);
  }

  /**Gets the attribute value for IouClosedDate, using the alias name IouClosedDate
   */
  public Date getIouClosedDate()
  {
    return (Date)getAttributeInternal(IOUCLOSEDDATE);
  }

  /**Sets <code>value</code> as the attribute value for IouClosedDate
   */
  public void setIouClosedDate(Date value)
  {
    setAttributeInternal(IOUCLOSEDDATE, value);
  }

  /**Gets the attribute value for ReasonForClosing, using the alias name ReasonForClosing
   */
  public String getReasonForClosing()
  {
    return (String)getAttributeInternal(REASONFORCLOSING);
  }

  /**Sets <code>value</code> as the attribute value for ReasonForClosing
   */
  public void setReasonForClosing(String value)
  {
    setAttributeInternal(REASONFORCLOSING, value);
  }

  /**Gets the attribute value for BillAmount, using the alias name BillAmount
   */
  public Number getBillAmount()
  {
    return (Number)getAttributeInternal(BILLAMOUNT);
  }

  /**Sets <code>value</code> as the attribute value for BillAmount
   */
  public void setBillAmount(Number value)
  {
    setAttributeInternal(BILLAMOUNT, value);
  }

  /**Gets the attribute value for BillAttachment, using the alias name BillAttachment
   */
  public Number getBillAttachment()
  {
    return (Number)getAttributeInternal(BILLATTACHMENT);
  }

  /**Sets <code>value</code> as the attribute value for BillAttachment
   */
  public void setBillAttachment(Number value)
  {
    setAttributeInternal(BILLATTACHMENT, value);
  }

  /**Gets the attribute value for DiffAmount, using the alias name DiffAmount
   */
  public Number getDiffAmount()
  {
    return (Number)getAttributeInternal(DIFFAMOUNT);
  }

  /**Sets <code>value</code> as the attribute value for DiffAmount
   */
  public void setDiffAmount(Number value)
  {
    setAttributeInternal(DIFFAMOUNT, value);
  }

  /**Gets the attribute value for DiffAmountSettled, using the alias name DiffAmountSettled
   */
  public String getDiffAmountSettled()
  {
    return (String)getAttributeInternal(DIFFAMOUNTSETTLED);
  }

  /**Sets <code>value</code> as the attribute value for DiffAmountSettled
   */
  public void setDiffAmountSettled(String value)
  {
    setAttributeInternal(DIFFAMOUNTSETTLED, value);
  }

  /**Gets the attribute value for Attachment, using the alias name Attachment
   */
  public String getAttachment()
  {
    return (String)getAttributeInternal(ATTACHMENT);
  }

  /**Sets <code>value</code> as the attribute value for Attachment
   */
  public void setAttachment(String value)
  {
    setAttributeInternal(ATTACHMENT, value);
  }

  /**Gets the attribute value for AttributeCategory, using the alias name AttributeCategory
   */
  public String getAttributeCategory()
  {
    return (String)getAttributeInternal(ATTRIBUTECATEGORY);
  }

  /**Sets <code>value</code> as the attribute value for AttributeCategory
   */
  public void setAttributeCategory(String value)
  {
    setAttributeInternal(ATTRIBUTECATEGORY, value);
  }

  /**Gets the attribute value for Attribute1, using the alias name Attribute1
   */
  public String getAttribute1()
  {
    return (String)getAttributeInternal(ATTRIBUTE1);
  }

  /**Sets <code>value</code> as the attribute value for Attribute1
   */
  public void setAttribute1(String value)
  {
    setAttributeInternal(ATTRIBUTE1, value);
  }

  /**Gets the attribute value for Attribute2, using the alias name Attribute2
   */
  public String getAttribute2()
  {
    return (String)getAttributeInternal(ATTRIBUTE2);
  }

  /**Sets <code>value</code> as the attribute value for Attribute2
   */
  public void setAttribute2(String value)
  {
    setAttributeInternal(ATTRIBUTE2, value);
  }

  /**Gets the attribute value for Attribute3, using the alias name Attribute3
   */
  public String getAttribute3()
  {
    return (String)getAttributeInternal(ATTRIBUTE3);
  }

  /**Sets <code>value</code> as the attribute value for Attribute3
   */
  public void setAttribute3(String value)
  {
    setAttributeInternal(ATTRIBUTE3, value);
  }

  /**Gets the attribute value for Attribute4, using the alias name Attribute4
   */
  public String getAttribute4()
  {
    return (String)getAttributeInternal(ATTRIBUTE4);
  }

  /**Sets <code>value</code> as the attribute value for Attribute4
   */
  public void setAttribute4(String value)
  {
    setAttributeInternal(ATTRIBUTE4, value);
  }

  /**Gets the attribute value for Attribute5, using the alias name Attribute5
   */
  public String getAttribute5()
  {
    return (String)getAttributeInternal(ATTRIBUTE5);
  }

  /**Sets <code>value</code> as the attribute value for Attribute5
   */
  public void setAttribute5(String value)
  {
    setAttributeInternal(ATTRIBUTE5, value);
  }

  /**Gets the attribute value for Attribute6, using the alias name Attribute6
   */
  public String getAttribute6()
  {
    return (String)getAttributeInternal(ATTRIBUTE6);
  }

  /**Sets <code>value</code> as the attribute value for Attribute6
   */
  public void setAttribute6(String value)
  {
    setAttributeInternal(ATTRIBUTE6, value);
  }

  /**Gets the attribute value for Attribute7, using the alias name Attribute7
   */
  public String getAttribute7()
  {
    return (String)getAttributeInternal(ATTRIBUTE7);
  }

  /**Sets <code>value</code> as the attribute value for Attribute7
   */
  public void setAttribute7(String value)
  {
    setAttributeInternal(ATTRIBUTE7, value);
  }

  /**Gets the attribute value for Attribute8, using the alias name Attribute8
   */
  public String getAttribute8()
  {
    return (String)getAttributeInternal(ATTRIBUTE8);
  }

  /**Sets <code>value</code> as the attribute value for Attribute8
   */
  public void setAttribute8(String value)
  {
    setAttributeInternal(ATTRIBUTE8, value);
  }

  /**Gets the attribute value for Attribute9, using the alias name Attribute9
   */
  public String getAttribute9()
  {
    return (String)getAttributeInternal(ATTRIBUTE9);
  }

  /**Sets <code>value</code> as the attribute value for Attribute9
   */
  public void setAttribute9(String value)
  {
    setAttributeInternal(ATTRIBUTE9, value);
  }

  /**Gets the attribute value for Attribute10, using the alias name Attribute10
   */
  public String getAttribute10()
  {
    return (String)getAttributeInternal(ATTRIBUTE10);
  }

  /**Sets <code>value</code> as the attribute value for Attribute10
   */
  public void setAttribute10(String value)
  {
    setAttributeInternal(ATTRIBUTE10, value);
  }

  /**Gets the attribute value for Attribute11, using the alias name Attribute11
   */
  public String getAttribute11()
  {
    return (String)getAttributeInternal(ATTRIBUTE11);
  }

  /**Sets <code>value</code> as the attribute value for Attribute11
   */
  public void setAttribute11(String value)
  {
    setAttributeInternal(ATTRIBUTE11, value);
  }

  /**Gets the attribute value for Attribute12, using the alias name Attribute12
   */
  public String getAttribute12()
  {
    return (String)getAttributeInternal(ATTRIBUTE12);
  }

  /**Sets <code>value</code> as the attribute value for Attribute12
   */
  public void setAttribute12(String value)
  {
    setAttributeInternal(ATTRIBUTE12, value);
  }

  /**Gets the attribute value for Attribute13, using the alias name Attribute13
   */
  public String getAttribute13()
  {
    return (String)getAttributeInternal(ATTRIBUTE13);
  }

  /**Sets <code>value</code> as the attribute value for Attribute13
   */
  public void setAttribute13(String value)
  {
    setAttributeInternal(ATTRIBUTE13, value);
  }

  /**Gets the attribute value for Attribute14, using the alias name Attribute14
   */
  public String getAttribute14()
  {
    return (String)getAttributeInternal(ATTRIBUTE14);
  }

  /**Sets <code>value</code> as the attribute value for Attribute14
   */
  public void setAttribute14(String value)
  {
    setAttributeInternal(ATTRIBUTE14, value);
  }

  /**Gets the attribute value for Attribute15, using the alias name Attribute15
   */
  public String getAttribute15()
  {
    return (String)getAttributeInternal(ATTRIBUTE15);
  }

  /**Sets <code>value</code> as the attribute value for Attribute15
   */
  public void setAttribute15(String value)
  {
    setAttributeInternal(ATTRIBUTE15, value);
  }

  /**Gets the attribute value for Attribute16, using the alias name Attribute16
   */
  public String getAttribute16()
  {
    return (String)getAttributeInternal(ATTRIBUTE16);
  }

  /**Sets <code>value</code> as the attribute value for Attribute16
   */
  public void setAttribute16(String value)
  {
    setAttributeInternal(ATTRIBUTE16, value);
  }

  /**Gets the attribute value for Attribute17, using the alias name Attribute17
   */
  public String getAttribute17()
  {
    return (String)getAttributeInternal(ATTRIBUTE17);
  }

  /**Sets <code>value</code> as the attribute value for Attribute17
   */
  public void setAttribute17(String value)
  {
    setAttributeInternal(ATTRIBUTE17, value);
  }

  /**Gets the attribute value for Attribute18, using the alias name Attribute18
   */
  public String getAttribute18()
  {
    return (String)getAttributeInternal(ATTRIBUTE18);
  }

  /**Sets <code>value</code> as the attribute value for Attribute18
   */
  public void setAttribute18(String value)
  {
    setAttributeInternal(ATTRIBUTE18, value);
  }

  /**Gets the attribute value for Attribute19, using the alias name Attribute19
   */
  public String getAttribute19()
  {
    return (String)getAttributeInternal(ATTRIBUTE19);
  }

  /**Sets <code>value</code> as the attribute value for Attribute19
   */
  public void setAttribute19(String value)
  {
    setAttributeInternal(ATTRIBUTE19, value);
  }

  /**Gets the attribute value for Attribute20, using the alias name Attribute20
   */
  public String getAttribute20()
  {
    return (String)getAttributeInternal(ATTRIBUTE20);
  }

  /**Sets <code>value</code> as the attribute value for Attribute20
   */
  public void setAttribute20(String value)
  {
    setAttributeInternal(ATTRIBUTE20, value);
  }

  /**Gets the attribute value for CreationDate, using the alias name CreationDate
   */
  public Date getCreationDate()
  {
    return (Date)getAttributeInternal(CREATIONDATE);
  }

  /**Sets <code>value</code> as the attribute value for CreationDate
   */
  public void setCreationDate(Date value)
  {
    setAttributeInternal(CREATIONDATE, value);
  }

  /**Gets the attribute value for CreatedBy, using the alias name CreatedBy
   */
  public Number getCreatedBy()
  {
    return (Number)getAttributeInternal(CREATEDBY);
  }

  /**Sets <code>value</code> as the attribute value for CreatedBy
   */
  public void setCreatedBy(Number value)
  {
    setAttributeInternal(CREATEDBY, value);
  }

  /**Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate
   */
  public Date getLastUpdateDate()
  {
    return (Date)getAttributeInternal(LASTUPDATEDATE);
  }

  /**Sets <code>value</code> as the attribute value for LastUpdateDate
   */
  public void setLastUpdateDate(Date value)
  {
    setAttributeInternal(LASTUPDATEDATE, value);
  }

  /**Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy
   */
  public Number getLastUpdatedBy()
  {
    return (Number)getAttributeInternal(LASTUPDATEDBY);
  }

  /**Sets <code>value</code> as the attribute value for LastUpdatedBy
   */
  public void setLastUpdatedBy(Number value)
  {
    setAttributeInternal(LASTUPDATEDBY, value);
  }

  /**Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin
   */
  public Number getLastUpdateLogin()
  {
    return (Number)getAttributeInternal(LASTUPDATELOGIN);
  }

  /**Sets <code>value</code> as the attribute value for LastUpdateLogin
   */
  public void setLastUpdateLogin(Number value)
  {
    setAttributeInternal(LASTUPDATELOGIN, value);
  }

  /**getAttrInvokeAccessor: generated method. Do not modify.
   */
  protected Object getAttrInvokeAccessor(int index, 
                                         AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
    {
    case IOUID:
      return getIouId();
    case IOUNUM:
      return getIouNum();
    case PERSONID:
      return getPersonId();
    case DIVISIONID:
      return getDivisionId();
    case IOUGIVENDATE:
      return getIouGivenDate();
    case CURRENCY:
      return getCurrency();
    case AMOUNT:
      return getAmount();
    case EXCHANGERATE:
      return getExchangeRate();
    case EXCHANGERATEDATE:
      return getExchangeRateDate();
    case EXCHANGERATETYPE:
      return getExchangeRateType();
    case AMOUNTOMR:
      return getAmountOmr();
    case REMARKS:
      return getRemarks();
    case IOUCLOSEDDATE:
      return getIouClosedDate();
    case REASONFORCLOSING:
      return getReasonForClosing();
    case BILLAMOUNT:
      return getBillAmount();
    case BILLATTACHMENT:
      return getBillAttachment();
    case DIFFAMOUNT:
      return getDiffAmount();
    case DIFFAMOUNTSETTLED:
      return getDiffAmountSettled();
    case ATTACHMENT:
      return getAttachment();
    case ATTRIBUTECATEGORY:
      return getAttributeCategory();
    case ATTRIBUTE1:
      return getAttribute1();
    case ATTRIBUTE2:
      return getAttribute2();
    case ATTRIBUTE3:
      return getAttribute3();
    case ATTRIBUTE4:
      return getAttribute4();
    case ATTRIBUTE5:
      return getAttribute5();
    case ATTRIBUTE6:
      return getAttribute6();
    case ATTRIBUTE7:
      return getAttribute7();
    case ATTRIBUTE8:
      return getAttribute8();
    case ATTRIBUTE9:
      return getAttribute9();
    case ATTRIBUTE10:
      return getAttribute10();
    case ATTRIBUTE11:
      return getAttribute11();
    case ATTRIBUTE12:
      return getAttribute12();
    case ATTRIBUTE13:
      return getAttribute13();
    case ATTRIBUTE14:
      return getAttribute14();
    case ATTRIBUTE15:
      return getAttribute15();
    case ATTRIBUTE16:
      return getAttribute16();
    case ATTRIBUTE17:
      return getAttribute17();
    case ATTRIBUTE18:
      return getAttribute18();
    case ATTRIBUTE19:
      return getAttribute19();
    case ATTRIBUTE20:
      return getAttribute20();
    case CREATIONDATE:
      return getCreationDate();
    case CREATEDBY:
      return getCreatedBy();
    case LASTUPDATEDATE:
      return getLastUpdateDate();
    case LASTUPDATEDBY:
      return getLastUpdatedBy();
    case LASTUPDATELOGIN:
      return getLastUpdateLogin();
    case STATUS:
      return getStatus();
    case DIVISION:
      return getDivision();
    default:
      return super.getAttrInvokeAccessor(index, attrDef);
    }
  }

  /**setAttrInvokeAccessor: generated method. Do not modify.
   */
  protected void setAttrInvokeAccessor(int index, Object value, 
                                       AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
    {
    case IOUID:
      setIouId((Number)value);
      return;
    case IOUNUM:
      setIouNum((String)value);
      return;
    case PERSONID:
      setPersonId((Number)value);
      return;
    case DIVISIONID:
      setDivisionId((Number)value);
      return;
    case IOUGIVENDATE:
      setIouGivenDate((Date)value);
      return;
    case CURRENCY:
      setCurrency((String)value);
      return;
    case AMOUNT:
      setAmount((String)value);
      return;
    case EXCHANGERATE:
      setExchangeRate((String)value);
      return;
    case EXCHANGERATEDATE:
      setExchangeRateDate((Date)value);
      return;
    case EXCHANGERATETYPE:
      setExchangeRateType((String)value);
      return;
    case AMOUNTOMR:
      setAmountOmr((String)value);
      return;
    case REMARKS:
      setRemarks((String)value);
      return;
    case IOUCLOSEDDATE:
      setIouClosedDate((Date)value);
      return;
    case REASONFORCLOSING:
      setReasonForClosing((String)value);
      return;
    case BILLAMOUNT:
      setBillAmount((Number)value);
      return;
    case BILLATTACHMENT:
      setBillAttachment((Number)value);
      return;
    case DIFFAMOUNT:
      setDiffAmount((Number)value);
      return;
    case DIFFAMOUNTSETTLED:
      setDiffAmountSettled((String)value);
      return;
    case ATTACHMENT:
      setAttachment((String)value);
      return;
    case ATTRIBUTECATEGORY:
      setAttributeCategory((String)value);
      return;
    case ATTRIBUTE1:
      setAttribute1((String)value);
      return;
    case ATTRIBUTE2:
      setAttribute2((String)value);
      return;
    case ATTRIBUTE3:
      setAttribute3((String)value);
      return;
    case ATTRIBUTE4:
      setAttribute4((String)value);
      return;
    case ATTRIBUTE5:
      setAttribute5((String)value);
      return;
    case ATTRIBUTE6:
      setAttribute6((String)value);
      return;
    case ATTRIBUTE7:
      setAttribute7((String)value);
      return;
    case ATTRIBUTE8:
      setAttribute8((String)value);
      return;
    case ATTRIBUTE9:
      setAttribute9((String)value);
      return;
    case ATTRIBUTE10:
      setAttribute10((String)value);
      return;
    case ATTRIBUTE11:
      setAttribute11((String)value);
      return;
    case ATTRIBUTE12:
      setAttribute12((String)value);
      return;
    case ATTRIBUTE13:
      setAttribute13((String)value);
      return;
    case ATTRIBUTE14:
      setAttribute14((String)value);
      return;
    case ATTRIBUTE15:
      setAttribute15((String)value);
      return;
    case ATTRIBUTE16:
      setAttribute16((String)value);
      return;
    case ATTRIBUTE17:
      setAttribute17((String)value);
      return;
    case ATTRIBUTE18:
      setAttribute18((String)value);
      return;
    case ATTRIBUTE19:
      setAttribute19((String)value);
      return;
    case ATTRIBUTE20:
      setAttribute20((String)value);
      return;
    case CREATIONDATE:
      setCreationDate((Date)value);
      return;
    case CREATEDBY:
      setCreatedBy((Number)value);
      return;
    case LASTUPDATEDATE:
      setLastUpdateDate((Date)value);
      return;
    case LASTUPDATEDBY:
      setLastUpdatedBy((Number)value);
      return;
    case LASTUPDATELOGIN:
      setLastUpdateLogin((Number)value);
      return;
    case STATUS:
      setStatus((String)value);
      return;
    case DIVISION:
      setDivision((String)value);
      return;
    default:
      super.setAttrInvokeAccessor(index, value, attrDef);
      return;
    }
  }

  /**Gets the attribute value for Status, using the alias name Status
   */
  public String getStatus()
  {
    return (String)getAttributeInternal(STATUS);
  }

  /**Sets <code>value</code> as the attribute value for Status
   */
  public void setStatus(String value)
  {
    setAttributeInternal(STATUS, value);
  }

  /**Gets the attribute value for Division, using the alias name Division
   */
  public String getDivision()
  {
    return (String)getAttributeInternal(DIVISION);
  }

  /**Sets <code>value</code> as the attribute value for Division
   */
  public void setDivision(String value)
  {
    setAttributeInternal(DIVISION, value);
  }

  /**Creates a Key object based on given key constituents
   */
  public static Key createPrimaryKey(Number iouId)
  {
    return new Key(new Object[]{iouId});
  }
}
