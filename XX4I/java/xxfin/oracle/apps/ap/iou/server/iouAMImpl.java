package xxfin.oracle.apps.ap.iou.server;

import oracle.apps.fnd.framework.server.OAApplicationModuleImpl;
import java.io.BufferedInputStream;
import java.io.File;

import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;


import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.Types;

import java.text.DateFormat;

import java.text.ParseException;
import java.text.SimpleDateFormat;

import java.util.List;

import java.util.Vector;


import oracle.apps.fnd.cp.request.ConcurrentRequest;
import oracle.apps.fnd.cp.request.RequestSubmissionException;
import oracle.apps.fnd.framework.server.OADBTransaction;

import oracle.jbo.Row;
import oracle.apps.fnd.framework.OAViewObject;
import oracle.apps.fnd.framework.server.OAViewObjectImpl;
import oracle.jbo.domain.BlobDomain;

import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletResponse;

import oracle.apps.fnd.framework.OAApplicationModule;
import oracle.apps.fnd.framework.OAException;
import oracle.apps.fnd.framework.server.OAApplicationModuleImpl;

import oracle.apps.fnd.framework.webui.OAPageContext;


import oracle.apps.fnd.framework.webui.beans.OAWebBean;

import oracle.jbo.ViewObject;

import oracle.jdbc.OracleCallableStatement;

import xxfin.oracle.apps.ap.iou.lov.server.iouConversionTypeVOImpl;
import xxfin.oracle.apps.ap.iou.lov.server.iouCurrencyLOVVOImpl;
import xxfin.oracle.apps.ap.iou.lov.server.iouEmpLOVVOImpl;
import xxfin.oracle.apps.ap.iou.picklist.server.iouDivisionVOImpl;
import xxfin.oracle.apps.ap.iou.picklist.server.iouReasonVOImpl;
import xxfin.oracle.apps.ap.iou.picklist.server.iouStatusVOImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class iouAMImpl extends OAApplicationModuleImpl
{
  /**This is the default constructor (do not remove)
   */
  public iouAMImpl()
  {
  }

  /**Sample main for debugging Business Components code using the tester.
   */
  public static void main(String[] args)
  {
    launchTester("xxfin.oracle.apps.ap.iou.server", /* package name */
      "iouAMLocal" /* Configuration Name */);
  }
  
  public static void executeQuery(OAViewObject viewObject,String whereClause,List params) 
  {
      viewObject.setWhereClause(null);
      viewObject.setWhereClauseParams(null);
      viewObject.setMaxFetchSize(-1);    
      viewObject.setQueryMode(ViewObject.QUERY_MODE_SCAN_DATABASE_TABLES);
      if(whereClause!=null) {
          viewObject.setWhereClause(whereClause);
      }
      if(params != null && !params.isEmpty()) {
          for(int i=0;i<params.size();i++){
          System.out.println("i="+i+"params.get(i)=="+params.get(i));
              viewObject.setWhereClauseParam(i,params.get(i));
              }
      }
      viewObject.executeQuery();
      viewObject.first();
  }
  
  public String create_row(String Division,OAPageContext pageContext,iouAMImpl am)
  
  {
  String iouid =null;
  
     iouVOImpl vo  = getiouVO();
     
    try {
        //ensure that this entire insert operation happens only once
        //on the first execution only
        if (!vo.isPreparedForExecution()) 
        {
          iouVORowImpl row = (iouVORowImpl)vo.createRow();
          
          row.setNewRowState(Row.STATUS_INITIALIZED);
          row.setIouId(getOADBTransaction().getSequenceValue("XXFIN_STAFF_IOU_ID"));
//          row.setIouNum("IOU-"+row.getIouId());
          row.setDivision(Division);
          row.setStatus("Open");
          row.setCurrency("OMR");
          row.setExchangeRate("1");
          row.setExchangeRateType("Corporate");
          row.setReadOnlyT(Boolean.TRUE);
          row.setExchangeRateDate(am.getOADBTransaction().getCurrentUserDate());
          vo.insertRow(row);
          vo.setCurrentRow(row);
          
          iouid = row.getIouId().toString();
          pageContext.putSessionValue("iouid",iouid);
          pageContext.writeDiagnostics(this,"Date = "+am.getOADBTransaction().getCurrentUserDate(),4);
        }
        
        return iouid;
        
      }
    catch (Exception ex) 
     {
         System.out.println(ex);
         throw OAException.wrapperException(ex);
     }
  
  
  }
  public void Close_IOU(OAPageContext pageContext, OAWebBean webBean,OAApplicationModule AM, String iouid) 
   {
   System.out.println("iouid = "+iouid);
      String callStr = "{ call XXFIN_STAFF_IOU_UTIL_PKG.CLOSE_IOU (:1) }";
      try {
          OracleCallableStatement callable = (OracleCallableStatement)AM.getOADBTransaction().createCallableStatement(callStr,1);
          callable.setString(1,iouid);
          callable.execute();
          callable.close();
      }
      catch (Exception e) {
          throw OAException.wrapperException(e);
      }
   }
   
  public void generate_num(OAPageContext pageContext, OAWebBean webBean,OAApplicationModule AM, String iouid) 
   {
   System.out.println("iouid = "+iouid);
      String callStr = "{ call XXFIN_STAFF_IOU_UTIL_PKG.generate_iou_num (:1) }";
      try {
          OracleCallableStatement callable = (OracleCallableStatement)AM.getOADBTransaction().createCallableStatement(callStr,1);
          callable.setString(1,iouid);
          callable.execute();
          callable.close();
      }
      catch (Exception e) {
          throw OAException.wrapperException(e);
      }
   }
   
  public void Cancel_IOU(OAPageContext pageContext, OAWebBean webBean,OAApplicationModule AM, String iouid) 
   {
   System.out.println("iouid = "+iouid);
      String callStr = "{ call XXFIN_STAFF_IOU_UTIL_PKG.CANCEL_IOU (:1) }";
      try {
          OracleCallableStatement callable = (OracleCallableStatement)AM.getOADBTransaction().createCallableStatement(callStr,1);
          callable.setString(1,iouid);
          callable.execute();
          callable.close();
      }
      catch (Exception e) {
          throw OAException.wrapperException(e);
      }
   }
   
  public String get_diff(OAPageContext pageContext, OAWebBean webBean,OAApplicationModule AM, String iouid, String bill_amt) 
   {
   System.out.println("iouid = "+iouid);
   String diff_amt = "";
      String callStr = "{ call XXFIN_STAFF_IOU_UTIL_PKG.get_diff_amount (:1,:2,:3) }";
      try {
          OracleCallableStatement callable = (OracleCallableStatement)AM.getOADBTransaction().createCallableStatement(callStr,1);
          callable.setString(1,iouid);
          callable.setString(2,bill_amt);
          callable.registerOutParameter(3,Types.VARCHAR);
          callable.execute();
          diff_amt = callable.getString(3);
          callable.close();
          
          return diff_amt;
      }
      catch (Exception e) {
          throw OAException.wrapperException(e);
      }
   }
   
   
  public String get_flag(OAPageContext pageContext, OAWebBean webBean,OAApplicationModule AM, String p_division, String Amount) 
   {
      System.out.println("p_division = "+p_division);
      String flag = "";
      String callStr = "{ call XXFIN_STAFF_IOU_UTIL_PKG.validate_division (:1,:2,:3) }";
      try {
          OracleCallableStatement callable = (OracleCallableStatement)AM.getOADBTransaction().createCallableStatement(callStr,1);
          callable.setString(1,p_division);
          callable.setString(2,Amount);
          callable.registerOutParameter(3,Types.VARCHAR);
          callable.execute();
          flag = callable.getString(3);
          callable.close();
          
          return flag;
      }
      catch (Exception e) {
          throw OAException.wrapperException(e);
      }
   }

  public String get_bill_flag(OAPageContext pageContext, OAWebBean webBean,OAApplicationModule AM, String iouid) 
   {
      System.out.println("iouid = "+iouid);
      String flag = "";
      String callStr = "{ call XXFIN_STAFF_IOU_UTIL_PKG.bill_attach_count (:1,:2) }";
      try {
          OracleCallableStatement callable = (OracleCallableStatement)AM.getOADBTransaction().createCallableStatement(callStr,1);
          callable.setString(1,iouid);
          callable.registerOutParameter(2,Types.VARCHAR);
          callable.execute();
          flag = callable.getString(2);
          callable.close();
          
          return flag;
      }
      catch (Exception e) {
          throw OAException.wrapperException(e);
      }
   }
   
  public String call_workflow(OAPageContext pageContext, OAWebBean webBean,OAApplicationModule AM, String iouid) 
   {
      System.out.println("iouid = "+iouid);
      String err_msg = "";
      String callStr = "{ call XXFIN_STAFF_IOU_UTIL_PKG.SEND_FYI (:1,:2,:3) }";
      try {
          OracleCallableStatement callable = (OracleCallableStatement)AM.getOADBTransaction().createCallableStatement(callStr,1);
          callable.registerOutParameter(1,Types.VARCHAR);
          callable.registerOutParameter(2,Types.VARCHAR);
          callable.setString(3,iouid);
          callable.execute();
          err_msg = callable.getString(1);
          callable.close();
          
          return err_msg;
      }
      catch (Exception e) {
          throw OAException.wrapperException(e);
      }
   }
  /**Container's getter for iouVO
   */
  public iouVOImpl getiouVO()
  {
    return (iouVOImpl)findViewObject("iouVO");
  }

  /**Container's getter for iouEmpLOVVO
   */
  public iouEmpLOVVOImpl getiouEmpLOVVO()
  {
    return (iouEmpLOVVOImpl)findViewObject("iouEmpLOVVO");
  }

  /**Container's getter for iouStatusVO
   */
  public iouStatusVOImpl getiouStatusVO()
  {
    return (iouStatusVOImpl)findViewObject("iouStatusVO");
  }

  /**Container's getter for iouCurrencyLOVVO
   */
  public iouCurrencyLOVVOImpl getiouCurrencyLOVVO()
  {
    return (iouCurrencyLOVVOImpl)findViewObject("iouCurrencyLOVVO");
  }

  /**Container's getter for iouExchangeVO
   */
  public iouExchangeVOImpl getiouExchangeVO()
  {
    return (iouExchangeVOImpl)findViewObject("iouExchangeVO");
  }

  /**Container's getter for iouReasonVO
   */
  public iouReasonVOImpl getiouReasonVO()
  {
    return (iouReasonVOImpl)findViewObject("iouReasonVO");
  }

  /**Container's getter for iouHistVO
   */
  public iouHistVOImpl getiouHistVO()
  {
    return (iouHistVOImpl)findViewObject("iouHistVO");
  }

  /**Container's getter for iouConversionTypeVO
   */
  public iouConversionTypeVOImpl getiouConversionTypeVO()
  {
    return (iouConversionTypeVOImpl)findViewObject("iouConversionTypeVO");
  }

  /**Container's getter for iouDivisionVO
   */
  public iouDivisionVOImpl getiouDivisionVO()
  {
    return (iouDivisionVOImpl)findViewObject("iouDivisionVO");
  }
}
